version: "3.7"
services:
  atlas:
    build:
      context: ./flask
    image: atlas:$VERSION
    container_name: atlas
    ports:
      - "8050:8050"
    environment:
      - TARGET=$TARGET
      - HASURA_GRAPHQL_ADMIN_SECRET=$HASURA_GRAPHQL_ADMIN_SECRET
      - HASURA_GRAPHQL_API=$HASURA_GRAPHQL_API
      - SECRET_KEY=$SECRET_KEY
      - FLASK_ENV=$FLASK_ENV
    restart: unless-stopped

  # relational database
  postgres:
    image: postgres:12.5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=${DATABASE_HOST}
    ports:
      - "5433:5432"

  hasura:
    build:
      context: ./hasura
      dockerfile: ./Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$DATABASE_HOST:5432/$POSTGRES_DB
      #HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # disabled so that we use the hasura cli (migrations)
      #      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      #HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, query-log
      #HASURA_GRAPHQL_SERVER_PORT: 8082
      #HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      #HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
      #HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
